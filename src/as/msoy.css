Application {
  backgroundColor: #b98c3b;
  backgroundGradientColors: #d7c39d, #403323;
  backgroundGradientAlphas: 0.83, 1;
  themeColor: #54a9da;
  color: #0b333c;
  width: 1024;
  height: 544;
}

Panel {
  backgroundAlpha: 1;
  backgroundColor: #ffffff;
  borderAlpha: 1;
  borderColor: #000000;
  borderThickness: 0;
  borderThicknessLeft: 0;
  borderThicknessRight: 0;
  borderThicknessTop: 0;
  borderThicknessBottom: 0;
  cornerRadius: 0;
  dropShadowColor: #443522;
  dropShadowEnabled: true;
  footerColors: #ffffff, #c7c7c7;
  headerColors: #000000, #444444;
  highlightAlphas: 0, 0;
  modalTransparencyBlur: 0;
  shadowDistance: 2;
  textAlign: left;
}

TitleWindow {
  borderAlpha: 0;
  cornerRadius: 4;
  roundedBottomCorners: true;
  headerHeight: 23;
  titleBackgroundSkin: Embed(source="../../rsrc/media/skins/window/title_bg.png",
          scaleGridTop="8", scaleGridBottom="14",
          scaleGridLeft="8", scaleGridRight="28");
  titleStyleName: "msoyTitleStyle";
  backgroundImage: Embed(source="../../rsrc/media/skins/window/window_bg.png",
          scaleGridTop="10", scaleGridBottom="20",
          scaleGridLeft="10", scaleGridRight="20");
  backgroundSize: "100%";
  closeButtonOverSkin: Embed(source="../../pages/images/ui/close_over.png");
  closeButtonDisabledSkin: Embed(source="../../pages/images/ui/close.png");
  closeButtonDownSkin: Embed(source="../../pages/images/ui/close_down.png");
  closeButtonUpSkin: Embed(source="../../pages/images/ui/close.png");
}

/**
 * The new style for our windows.
 * IN PROGRESS
 *
 * The following styles work, and work pretty well. The notes below this line were what
 * learned on the way here..
 * 
 * Unfortunately, if we have a background image, then the background color is also used.
 * if we have alpha in the image, then the color shows through.
 * There is no way to turn off the backgroundColor.
 *
 * What I'm proposing to the artists is that we don't have a fucking transparent header, because
 * then I can do the blue border stuff with the "border" styles, and not even have a
 * background image, but do it purely with the color and alpha.
 */
.sexyWindow {
  borderColor: #3db8eb;
  borderAlpha: 1;
  borderThicknessLeft: 3;
  borderThicknessRight: 3;
  borderThicknessBottom: 3;
  borderThicknessTop: 0;
  borderThickness: 0;
  borderSides: "left right bottom";
  /*
  roundedBottomCorners: false;
  */
  cornerRadius: 4;
  backgroundColor: #000000;
  backgroundAlpha: 0.85;
  backgroundImage: null;
  titleBackgroundSkin: Embed(source="../../rsrc/media/skins/window/sexy_title.png",
          scaleGridTop="8", scaleGridBottom="14",
          scaleGridLeft="8", scaleGridRight="28");
  paddingTop: 10px;
  paddingRight: 10px;
  paddingBottom: 10px;
  paddingLeft: 10px;

  horizontalAlign: center;

  /* this cascades to our children */
  color: white;
}

.topPanel {
  backgroundColor: #000000;
}

.entityPopup {
  titleBackgroundSkin: Embed(source="../../rsrc/media/skins/furni_popup_bg.png",
          scaleGridTop="8", scaleGridBottom="14",
          scaleGridLeft="8", scaleGridRight="28");
  backgroundImage: null;
}

.msoyTitleStyle {
  color: #FFFFFF;
  fontWeight: bold;
}

.accordianHeader {
  fontFamily: Arial;
  fontSize: 12px;
  paddingLeft: 4px;
  paddingTop: 4px;
  paddingBottom: 4px;
  paddingRight: 4px;
}

Accordion {
  backgroundAlpha: 0;
  headerStyleName: "accordianHeader";
}

/*Accordion {
  headerHeight: 20;
  dropShadowEnabled: true;
  shadowDirection: center;
  borderStyle: solid;
  borderThickness: 5;
  backgroundAlpha: 0.41;
  highlightAlphas: 0, 0;
  fillAlphas: 1, 1, 1, 1;
  fillColors: #3e3123, #5c442d, #dbb56c, #fad58f;
  selectedFillColors: #453929, #5c4932;
  themeColor: #d8c49f;
  borderColor: #d8c49f;
  color: #d8c49f;
  textRollOverColor: #fd019f;
  textSelectedColor: #fd019f;
  openDuration: 225;
}*/

TextInput {
  backgroundAlpha: 1;
  color: #000000;
  backgroundColor: #e9f6fb;
  backgroundDisabledColor: #eeeeee;
  borderStyle: inset;
  borderColor: #d5dcdf;
  borderThickness: 2;
  cornerRadius: 0;
  textIndent: 2;
  dropShadowEnabled: false;
}

TextArea {
  color: black;
}

NumericStepper {
  backgroundAlpha: 1;
  color: #000000;
  cornerRadius: 4;
  highlightAlphas: 0, 0;
  fillAlphas: 1, 1, 1, 1;
  fillColors: #dadfe3, #9eabb2, #dadfe3, #9eabb2;
}

ComboBox {
  fontSize: 9;
  color: black;
  upSkin: Embed(source="../../rsrc/media/skins/combobox/up.png",
          scaleGridTop="5", scaleGridBottom="13",
          scaleGridLeft="5", scaleGridRight="40");
  overSkin: Embed(source="../../rsrc/media/skins/combobox/up.png",
          scaleGridTop="5", scaleGridBottom="13",
          scaleGridLeft="5", scaleGridRight="40");
  downSkin: Embed(source="../../rsrc/media/skins/combobox/up.png",
          scaleGridTop="5", scaleGridBottom="13",
          scaleGridLeft="5", scaleGridRight="40");
  disabledSkin: Embed(source="../../rsrc/media/skins/combobox/disabled.png",
          scaleGridTop="5", scaleGridBottom="13",
          scaleGridLeft="5", scaleGridRight="40");
}

/** This is still used in a couple places, let's phase this out eventually. */
.oldCheckBox {
  borderColor: #403424;
  highlightAlphas: 0, 0;
  fillAlphas: 0, 0, 0.75, 0.65;
  fillColors: #403424, #403424, #ffffff, #eeeeee;

  upIcon: ClassReference(null);
  downIcon: ClassReference(null);
  overIcon: ClassReference(null);
  selectedUpIcon: ClassReference(null);
  selectedOverIcon: ClassReference(null);
  selectedDownIcon: ClassReference(null);
  color: black;
  textRollOverColor: black;
  textSelectedColor: black;
}

/** TODO: Get actual radio button art (Circles instead of squares) */
CheckBox, RadioButton {
  upIcon: Embed(source="../../rsrc/media/skins/checkbox/checkbox.png");
  overIcon: Embed(source="../../rsrc/media/skins/checkbox/checkbox_over.png");
  downIcon: Embed(source="../../rsrc/media/skins/checkbox/checkbox_over.png");
  selectedUpIcon: Embed(source="../../rsrc/media/skins/checkbox/checkbox_selected.png");
  selectedOverIcon: Embed(source="../../rsrc/media/skins/checkbox/checkbox_selected.png");
  selectedDownIcon: Embed(source="../../rsrc/media/skins/checkbox/checkbox_over.png");
}

HSlider {
  labelOffset: -8;
  thumbOffset: 0;
  dataTipOffset: 16;
  tickLength: 5;
  tickOffset: -3;
  tickThickness: 1;
  showTrackHighlight: false;
  fillAlphas: 1, 1, 1, 1;
  fillColors: #d5dcdf, #9eabb2, #9eabb2, #d5dcdf;
}

Button {
  paddingBottom: 3;
  /*
  fillAlphas: 1, 1, 1, 1;
  fillColors: #d5dcdf, #9ba8b0, #9ba8b0, #d5dcdf;
  */
  color: white;
  textRollOverColor: white;
  textSelectedColor: white;
  upSkin: Embed(source="../../rsrc/media/skins/button/up.png",
          scaleGridTop="1", scaleGridBottom="19",
          scaleGridLeft="2", scaleGridRight="19");
  overSkin: Embed(source="../../rsrc/media/skins/button/over.png",
          scaleGridTop="1", scaleGridBottom="19",
          scaleGridLeft="2", scaleGridRight="19");
  downSkin: Embed(source="../../rsrc/media/skins/button/down.png",
          scaleGridTop="1", scaleGridBottom="19",
          scaleGridLeft="2", scaleGridRight="19");
  disabledSkin: Embed(source="../../rsrc/media/skins/button/disabled.png",
          scaleGridTop="1", scaleGridBottom="19",
          scaleGridLeft="2", scaleGridRight="19");
          /*
  selectedUpSkin: Embed(source="../../rsrc/media/skins/button/up.png",
          scaleGridTop="1", scaleGridBottom="19",
          scaleGridLeft="2", scaleGridRight="19");
  selectedOverSkin: Embed(source="../../rsrc/media/skins/button/over.png",
          scaleGridTop="1", scaleGridBottom="19",
          scaleGridLeft="2", scaleGridRight="19");
  selectedDownSkin: Embed(source="../../rsrc/media/skins/button/down.png",
          scaleGridTop="1", scaleGridBottom="19",
          scaleGridLeft="2", scaleGridRight="19");
  selectedDisabledSkin: Embed(source="../../rsrc/media/skins/button/disabled.png",
          scaleGridTop="1", scaleGridBottom="19",
          scaleGridLeft="2", scaleGridRight="19");
          */
}

ColorPicker {
  /* For some reason, this is inheriting Button skins, and since
     we specify upSkin/downSkin/etc for Button, we need to specify
     that here too, rather than rely on the "skin" style. */
  overSkin: ClassReference("mx.skins.halo.ColorPickerSkin");
  disabledSkin: ClassReference("mx.skins.halo.ColorPickerSkin");
  downSkin: ClassReference("mx.skins.halo.ColorPickerSkin");
  upSkin: ClassReference("mx.skins.halo.ColorPickerSkin");
}

PopUpButton {
  fillAlphas: 1, 1, 1, 1;
  fillColors: #d5dcdf, #9ba8b0, #9ba8b0, #d5dcdf;
}

ButtonBar {
  horizontalGap: 6;
  horizontalAlign: "right";
}

VScrollBar, HScrollBar {
  highlightAlphas: 0.38, 0;
  fillAlphas: 1, 0.82, 0.79, 0.82;
  fillColors: #000000, #000000, #000000, #000000;
  trackColors: #000000, #000000;
  themeColor: #000000;
  borderColor: #000000;
  iconColor: #cccccc;
  thumbOffset: 0;
}

Menu {
  openDuration: 0;
  backgroundImage: Embed(source="../../rsrc/media/skins/menu/background.png",
    scaleGridTop="3", scaleGridBottom="26", scaleGridLeft="3", scaleGridRight="26");
  backgroundSize: "100%";
  backgroundColor: black;
  rollOverColor: #7DBFF8;
  dropShadowEnabled: true;
  backgroundAlpha: 0.6;
  borderStyle: none;
  color: #C2C2C2;
  disabledColor: #666666;
  separatorSkin: Embed(source="../../rsrc/media/skins/menu/separator_skin.png");
  branchIcon: Embed(source="../../rsrc/media/skins/menu/whitearrow.png");
}

MenuBar {
  cornerRadius: 4;
  backgroundAlpha: 1;
  backgroundColor: #ffffff;
  fillAlphas: 1, 1;
  fillColors: #d2d8dc, #9ba8b0;
  rollOverColor: #c8d0d3;
  selectionColor: #54a9da;
  themeColor: #999999;
}

HRule {
  strokeColor: #d5dcdf;
  shadowColor: #9facb3;
  strokeWidth: 2;
}

LinkButton {
  fontWeight: "normal";
  color: #AAB5B9;
  textRollOverColor: #AAB5B9;
  textSelectedColor: #AAB5B9;
  overSkin: Embed(source="../../rsrc/media/skins/blank.png");
  downSkin: Embed(source="../../rsrc/media/skins/blank.png");
  paddingLeft: 0;
  paddingTop: 0;
  paddingBottom: 0;
  paddingRight: 0;
}

ProgressBar {
  barColor: #54a9da;
}

ListBase {
  rollOverColor: #c8d0d3;
  selectionColor: #54a9da;
}

Tree {
  openDuration: 0;
}

TabNavigator, TabBar {
  borderStyle: none;
  borderThickness: 0;
  tabHeight: 20;
  tabStyleName: "msoyTabButton";
  selectedTabTextStyleName: "selectedMsoyTabButton";
}

.msoyTabButton {
  color: #b4cbd7;
  fontFamily: Arial;
  textRollOverColor: #b4cbd7;
  overSkin: Embed(source="../../rsrc/media/skins/tab/unselected.png",
          scaleGridTop="3", scaleGridBottom="17",
          scaleGridLeft="3", scaleGridRight="9");
  selectedOverSkin: Embed(source="../../rsrc/media/skins/tab/selected.png",
          scaleGridTop="3", scaleGridBottom="17",
          scaleGridLeft="3", scaleGridRight="9");
  selectedUpSkin: Embed(source="../../rsrc/media/skins/tab/selected.png",
          scaleGridTop="3", scaleGridBottom="17",
          scaleGridLeft="3", scaleGridRight="9");
  upSkin: Embed(source="../../rsrc/media/skins/tab/unselected.png",
          scaleGridTop="3", scaleGridBottom="17",
          scaleGridLeft="3", scaleGridRight="9");
}

.blueButton {
  /* TODO: scale9? */
  upSkin: Embed(source="../../rsrc/media/skins/button/blue_default.png");
  overSkin: Embed(source="../../rsrc/media/skins/button/blue_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/button/blue_down.png");
  disabledSkin: Embed(source="../../rsrc/media/skins/button/blue_disabled.png");
  selectedDisabledSkin: Embed(source="../../rsrc/media/skins/button/blue_disabled.png");
  color: #ffffff;
  textRollOverColor: #ffffff;
  textSelectedColor: #ffffff;
  fontSize: 16;
}

.joinNowButton {
  upSkin: Embed(source="../../rsrc/media/skins/button/joinnow_default.png");
  overSkin: Embed(source="../../rsrc/media/skins/button/joinnow_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/button/joinnow_down.png");
}

.logonButton {
  upSkin: Embed(source="../../rsrc/media/skins/button/logon_default.png");
  overSkin: Embed(source="../../rsrc/media/skins/button/logon_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/button/logon_down.png");
  disabledSkin: Embed(source="../../rsrc/media/skins/button/logon_disabled.png");
}

.unselectedRoomTab, .attentionRoomTab, .unselectedTellTab, .attentionTellTab, .unselectedGroupTab,
    .attentionGroupTab {
  fontFamily: Arial;
  fontWeight: bold;
  closeSkin: Embed(source="../../rsrc/media/skins/tab/close_small.png");
}

.unselectedRoomTab, .attentionRoomTab {
  color: #8BA1AF;
}

.unselectedTellTab, .attentionTellTab {
  color: #B2A696;
}

.unselectedGroupTab, .attentionGroupTab {
  color: #8E969D;
}

.selectedRoomTab, .selectedTellTab, .selectedGroupTab {
  color: white;
  fontFamily: Arial;
  fontWeight: bold;
  closeSkin: Embed(source="../../rsrc/media/skins/tab/close_small.png");
}

.unselectedRoomTab, .attentionRoomTab {
  buttonSkin: Embed(source="../../rsrc/media/skins/tab/tab_room_unselected.png",
    scaleGridTop="3", scaleGridBottom="17", scaleGridLeft="3", scaleGridRight="17");
}

.selectedRoomTab {
  buttonSkin: Embed(source="../../rsrc/media/skins/tab/tab_room_selected.png",
    scaleGridTop="3", scaleGridBottom="17", scaleGridLeft="3", scaleGridRight="17");
}

.unselectedTellTab, .attentionTellTab {
  buttonSkin: Embed(source="../../rsrc/media/skins/tab/tab_tell_unselected.png",
    scaleGridTop="3", scaleGridBottom="17", scaleGridLeft="3", scaleGridRight="17");
}

.selectedTellTab {
  buttonSkin: Embed(source="../../rsrc/media/skins/tab/tab_tell_selected.png",
    scaleGridTop="3", scaleGridBottom="17", scaleGridLeft="3", scaleGridRight="17");
}

.unselectedGroupTab, .attentionGroupTab {
  buttonSkin: Embed(source="../../rsrc/media/skins/tab/tab_group_unselected.png",
    scaleGridTop="3", scaleGridBottom="17", scaleGridLeft="3", scaleGridRight="17");
}

.selectedGroupTab {
  buttonSkin: Embed(source="../../rsrc/media/skins/tab/tab_group_selected.png",
    scaleGridTop="3", scaleGridBottom="17", scaleGridLeft="3", scaleGridRight="17");
}

.controlBar, .headerBar { 
  horizontalGap: 0;
  verticalGap: 0;
  borderStyle: "none";
  paddingBottom: 0;
  paddingTop: 0;
  paddingLeft: 0;
  paddingRight: 0;
}

.buttonPalette {
  paddingBottom: 5;
  paddingTop: 5;
  paddingLeft: 5;
  paddingRight: 5;
  horizontalGap: 8;
  verticalGap: 8;
  verticalAlign: "middle";
  horizontalAlign: "center";
  backgroundColor: black;
  backgroundAlphaClosed: 0;
  backgroundAlphaOpen: .85;
}

.currencyLabel {
  color: white;
  fontSize: 12;
  fontWeight: "bold";
}

.controlBar {
  backgroundImage: Embed(source="../../rsrc/media/skins/controlbar/bg.png");
  backgroundSize: "100%";
  horizontalGap: 10;
  verticalAlign: "bottom";
  paddingLeft: 8;
  paddingBottom: 1;
}

.controlBarButtonSend {
  upSkin: Embed(source="../../rsrc/media/skins/controlbar/send_default.png");
  overSkin: Embed(source="../../rsrc/media/skins/controlbar/send_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/controlbar/send_down.png");
}

.controlBarButtonChat {
  upSkin: Embed(source="../../rsrc/media/skins/controlbar/chatoptions.png");
  overSkin: Embed(source="../../rsrc/media/skins/controlbar/chatoptions_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/controlbar/chatoptions_down.png");
  /** UNUSED downSkin: Embed(source="../../rsrc/media/skins/controlbar/chatoptions_disabled.png"); */
}

.controlBarButtonEdit {
  upSkin: Embed(source="../../rsrc/media/skins/controlbar/editroom.png");
  overSkin: Embed(source="../../rsrc/media/skins/controlbar/editroom_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/controlbar/editroom_down.png");
  disabledSkin: Embed(source="../../rsrc/media/skins/controlbar/editroom_disabled.png");
  selectedUpSkin: Embed(source="../../rsrc/media/skins/controlbar/editroom.png");
  selectedOverSkin: Embed(source="../../rsrc/media/skins/controlbar/editroom_over.png");
  selectedDownSkin: Embed(source="../../rsrc/media/skins/controlbar/editroom_down.png");
}

.controlBarButtonVolume {
  upSkin: Embed(source="../../rsrc/media/skins/controlbar/volume.png");
  overSkin: Embed(source="../../rsrc/media/skins/controlbar/volume_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/controlbar/volume_down.png");
  /** UNUSED downSkin: Embed(source="../../rsrc/media/skins/controlbar/volume_disabled.png"); */
}

.controlBarButtonZoom {
  upSkin: Embed(source="../../rsrc/media/skins/controlbar/zoom.png");
  overSkin: Embed(source="../../rsrc/media/skins/controlbar/zoom_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/controlbar/zoom_down.png");
  disabledSkin: Embed(source="../../rsrc/media/skins/controlbar/zoom_disabled.png");
  selectedUpSkin: Embed(source="../../rsrc/media/skins/controlbar/zoom_down.png");
  selectedOverSkin: Embed(source="../../rsrc/media/skins/controlbar/zoom_down.png");
  selectedDownSkin: Embed(source="../../rsrc/media/skins/controlbar/zoom_down.png");
  selectedDisabledSkin: Embed(source="../../rsrc/media/skins/controlbar/zoom_disabled.png");
}

.controlBarButtonComment {
  upSkin: Embed(source="../../rsrc/media/skins/controlbar/comment.png");
  overSkin: Embed(source="../../rsrc/media/skins/controlbar/comment_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/controlbar/comment_down.png");
  /** UNUSED disabledSkin: Embed(source="../../rsrc/media/skins/controlbar/comment_disabled.png"); */
}

.controlBarButtonInstructions {
  upSkin: Embed(source="../../rsrc/media/skins/controlbar/instructions.png");
  overSkin: Embed(source="../../rsrc/media/skins/controlbar/instructions_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/controlbar/instructions_down.png");
  /** UNUSED disabledSkin: Embed(source="../../rsrc/media/skins/controlbar/instructions_disabled.png"); */
}

.controlBarButtonShare {
  upSkin: Embed(source="../../rsrc/media/skins/controlbar/share.png");
  overSkin: Embed(source="../../rsrc/media/skins/controlbar/share_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/controlbar/share_down.png");
  /** UNUSED disabledSkin: Embed(source="../../rsrc/media/skins/controlbar/share_disabled.png"); */
}

.controlBarButtonScores {
  upSkin: Embed(source="../../rsrc/media/skins/controlbar/score.png");
  overSkin: Embed(source="../../rsrc/media/skins/controlbar/score_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/controlbar/score_down.png");
  /** UNUSED disabledSkin: Embed(source="../../rsrc/media/skins/controlbar/score_disabled.png"); */
}

.controlBarHoverZone {
  disabledSkin: Embed(source="../../rsrc/media/skins/controlbar/clickable.png");
}

.controlBarButtonSnapshot {
  upSkin: Embed(source="../../rsrc/media/skins/controlbar/snapshot.png");
  overSkin: Embed(source="../../rsrc/media/skins/controlbar/snapshot_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/controlbar/snapshot_down.png");
  /** UNUSED disabledSkin: Embed(source="../../rsrc/media/skins/controlbar/snapshot_disabled.png"); */
}

.controlBarFriendButton {
  upSkin: Embed(source="../../rsrc/media/skins/controlbar/friends.png");
  overSkin: Embed(source="../../rsrc/media/skins/controlbar/friends_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/controlbar/friends_down.png");
  /** UNUSED disabledSkin: Embed(source="../../rsrc/media/skins/controlbar/friends_disabled.png"); */
}

.controlBarTalkButton {
  upSkin: Embed(source="../../rsrc/media/skins/controlbar/talk.png");
  overSkin: Embed(source="../../rsrc/media/skins/controlbar/talk_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/controlbar/talk_down.png");
  /** UNUSED disabledSkin: Embed(source="../../rsrc/media/skins/controlbar/talk_disabled.png"); */
}

.controlBarIdleButton {
  upSkin: Embed(source="../../rsrc/media/skins/controlbar/idle.png");
  overSkin: Embed(source="../../rsrc/media/skins/controlbar/idle_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/controlbar/idle_down.png");
  /** UNUSED disabledSkin: Embed(source="../../rsrc/media/skins/controlbar/idle_disabled.png"); */
}

.controlBarScaleButton {
  upSkin: Embed(source="../../rsrc/media/skins/controlbar/scale.png");
  overSkin: Embed(source="../../rsrc/media/skins/controlbar/scale_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/controlbar/scale_down.png");
  /* The disabled state is used briefly while the sprite is loading, I refuse to link in
     another graphic just for that. */
  disabledSkin: Embed(source="../../rsrc/media/skins/controlbar/scale.png");
  /** UNUSED disabledSkin: Embed(source="../../rsrc/media/skins/controlbar/scale_disabled.png"); */
}

.controlBarAVRGButton {
  upSkin: Embed(source="../../rsrc/media/skins/controlbar/avrg.png");
  overSkin: Embed(source="../../rsrc/media/skins/controlbar/avrg_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/controlbar/avrg_down.png");
  /** UNUSED disabledSkin: Embed(source="../../rsrc/media/skins/controlbar/avrg_disabled.png"); */
}

.tickButton {
  upSkin: Embed(source="../../rsrc/media/skins/controlbar/tick.png");
  overSkin: Embed(source="../../rsrc/media/skins/controlbar/tick_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/controlbar/tick_down.png");
  /** UNUSED disabledSkin: Embed(source="../../rsrc/media/skins/controlbar/tick_disabled.png"); */
}

.roomEditPanel {
  paddingBottom: 0;
  paddingTop: 0;
  paddingLeft: 0;
  paddingRight: 0;
  horizontalGap: 0;
  verticalGap: 1;
} 

.roomEditDetailsPanelGrid {
  horizontalGap: 1;
  verticalGap: 2;
}

BasePanel {
  backgroundDisabledColor: #e0eaeb;
  disabledColor: #e0eaeb;
}

.roomEditNameBar {  
  backgroundImage: Embed(source="../../rsrc/media/skins/button/roomeditor/name_bar_tile.png",
          scaleGridTop="10", scaleGridBottom="13",
          scaleGridLeft="10", scaleGridRight="20");
  backgroundSize: "100%";
  borderStyle: "none";
  paddingBottom: 5;
  paddingTop: 5;
  paddingLeft: 8;
  paddingRight: 8;
} 

.roomEditButtonBar {  
  borderStyle: "none";
  paddingBottom: 0;
  paddingTop: 0;
  paddingLeft: 0;
  paddingRight: 0;
  horizontalGap: 3;
  verticalAlign: "middle";
} 

.roomEditAccessButtons {
  buttonStyleName: "roomEditAccessButtonStyle";
  buttonWidth: 23;
  buttonHeight: 23;
  horizontalGap: 0;
}

.roomEditAccessButtonStyle {
  paddingBottom: 0;
  fillAlphas: 0.6, 0.4, 0.6, 0.4;
}

.roomEditAdvanced {  
  paddingBottom: 0;
  paddingTop: 3;
  paddingLeft: 0;
  paddingRight: 0;
  verticalGap: 0;
} 

.roomEditContents {  
  paddingBottom: 5;
  paddingTop: 5;
  paddingLeft: 8;
  paddingRight: 8;
  verticalGap: 2;
} 

.roomEditLabelContainer { 
  borderStyle: "none";
  borderThickness: 0;
  borderThicknessLeft: 0;
  borderThicknessRight: 0;
  borderThicknessTop: 0;
  borderThicknessBottom: 0;
  paddingBottom: 0;
  paddingTop: 0;
  paddingLeft: 5;
  paddingRight: 5;
  horizontalGap: 0;
  verticalGap: 0;
}

.roomEditCollapsingContainer { 
  borderStyle: "none";
  paddingBottom: 0;
  paddingTop: 0;
  paddingLeft: 0;
  paddingRight: 5;
  verticalGap: 1;
}

.roomEditCollapsingContents { 
  paddingBottom: 5;
  paddingTop: 2;
}

.roomEditLeft { 
  verticalAlign: "bottom";
  verticalGap: 15;
}

.roomEditDiv {
  backgroundSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/dot-separator.png");
}

.roomEditRight { 
  horizontalAlign: "center";
  verticalAlign: "bottom";
  verticalGap: 15;
}

.roomEditScaleDown {
  upSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/scale_down.png");
  overSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/scale_down_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/scale_down_down.png");
  disabledSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/scale_down_disabled.png");
}

.roomEditScaleUp {
  upSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/scale_up.png");
  overSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/scale_up_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/scale_up_down.png");
  disabledSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/scale_up_disabled.png");
}

.roomEditMoveDown {
  upSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/down-to-floor.png");
  overSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/down-to-floor_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/down-to-floor_down.png");
  disabledSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/down-to-floor_disabled.png");
}

.roomEditMoveUp {
  upSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/up-off-floor.png");
  overSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/up-off-floor_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/up-off-floor_down.png");
  disabledSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/up-off-floor_disabled.png");
}

.roomEditRotateLeft {
  upSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/rot_left.png");
  overSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/rot_left_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/rot_left_down.png");
  disabledSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/rot_left_disabled.png");
}

.roomEditRotateRight {
  upSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/rot_right.png");
  overSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/rot_right_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/rot_right_down.png");
  disabledSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/rot_right_disabled.png");
}

.roomEditFlipH {
  upSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/flip_horiz.png");
  overSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/flip_horiz_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/flip_horiz_down.png");
  disabledSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/flip_horiz_disabled.png");
}

.roomEditFlipV {
  upSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/flip_vert.png");
  overSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/flip_vert_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/flip_vert_down.png");
  disabledSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/left_icons/flip_vert_disabled.png");
}

.roomEditTrash {
  upSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/put-away.png");
  overSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/put-away_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/put-away_down.png");
  disabledSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/put-away_disabled.png");
}

.roomEditAdd {
  upSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/add-stuff.png");
  overSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/add-stuff_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/add-stuff_down.png");
  disabledSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/add-stuff_disabled.png");
}

.roomEditDoor {
  upSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/door.png");
  overSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/door_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/door_down.png");
  disabledSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/door_disabled.png");
}

.roomRemoveDoor {
  upSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/remove_door.png");
  overSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/remove_door_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/remove_door_down.png");
  disabledSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/remove_door_disabled.png");
}

.roomEditLink {
  upSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/make-url.png");
  overSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/make-url_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/make-url_down.png");
  disabledSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/make-url_disabled.png");
}

.roomRemoveLink {
  upSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/remove-url.png");
  overSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/remove-url_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/remove-url_down.png");
  disabledSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/remove-url_disabled.png");
}

.roomEditUndo {
  upSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/undo-shape.png");
  overSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/undo-shape_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/undo-shape_down.png");
  disabledSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/undo-shape_disabled.png");
}

.roomEditUndoAll {
  upSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/X-Undo-All.png");
  overSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/X-Undo-All_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/X-Undo-All_down.png");
  disabledSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/right_icons/X-Undo-All_disabled.png");
}

.roomEditButtonMakeMyHome {
  upSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/button_makehome.png");
  overSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/button_makehome_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/button_makehome_down.png");
  disabledSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/button_makehome_disabled.png");
  paddingLeft: 0;
  paddingRight: 0;
}

.roomEditButtonLabel {
  color: #444444;
  fontFamily: "Arial";
  fontSize: 9;
  fontAntiAliasType: "advanced";
  kerning: true;
  textAlign: "center";
}

.roomEditPanelButton { 
  paddingBottom: 0;
  right: 0;
}

.roomEditLabel {
    color: #000000;
    themeColor: #54a9da;
    fontFamily: "Arial";
    fontSize: 9;
}

.roomEditNameLabel {
    color: #000000;
    themeColor: #54a9da;
    fontSize: 11;
    fontWeight: "bold";
}

.roomEditButtonExpand {
  upSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/rollout_plus.png");
  overSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/rollout_plus.png");
  downSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/rollout_plus.png");
  disabledSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/rollout_plus.png");
  selectedUpSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/rollout_minus.png");
  selectedOverSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/rollout_minus.png");
  selectedDownSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/rollout_minus.png");
  selectedDisabledSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/rollout_minus.png");
}

.roomEditAdvancedContainer { 
  borderStyle: "none";
  borderThickness: 0;
  borderThicknessLeft: 0;
  borderThicknessRight: 0;
  borderThicknessTop: 0;
  borderThicknessBottom: 0;
  paddingBottom: 0;
  paddingTop: 0;
  paddingLeft: 3;
  paddingRight: 3;
  horizontalGap: 0;
  verticalGap: 0;
  horizontalAlign: "center";
  verticalAlign: "middle";
}

.roomEditResetLocation {
  upSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/reset_location.png");
  overSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/reset_location.png");
  downSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/reset_location.png");
  disabledSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/reset_location.png");
}

.roomEditResetScale {
  upSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/reset_scale.png");
  overSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/reset_scale.png");
  downSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/reset_scale.png");
  disabledSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/reset_scale.png");
}

.roomEditResetRotation {
  upSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/reset_rotation.png");
  overSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/reset_rotation.png");
  downSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/reset_rotation.png");
  disabledSkin: Embed(source="../../rsrc/media/skins/button/roomeditor/reset_rotation.png");
}

.sliderPopup {
  backgroundSkin: Embed(source="../../rsrc/media/skins/controlbar/volume_background.png",
          scaleGridTop="1", scaleGridBottom="23",
          scaleGridLeft="1", scaleGridRight="31");
  backgroundSize: "100%";
  dropShadowEnabled: "true";
}

.volumeSlider {
  showTrackHighlight: true;
}

.avatarCellSelected { 
  backgroundColor: #54a9da;
}

.chatControl {  
  paddingLeft: 0;
  paddingRight: 0;
  paddingTop: 0;
  paddingBottom: 2;
  verticalAlign: "center";
  backgroundAlpha: 0;
}

.chatInput {
  color: #000000;
  themeColor: #3db8eb;
  fontFamily: "Arial";
  fontSize: 12;
  borderStyle: "none";
}

.chatTargetButton {
    borderColor: #000000;
    fontWeight: "bold";
    fillAlphas: 1, 1;
    fillColors: #E6EEEE, #FFFFFF;
}

.headerBar {
  backgroundImage: Embed(source="../../rsrc/media/skins/headerbar/bg.png");
  backgroundSize: "100%";
}

.headerBarGoButton {
  upSkin: Embed(source="../../rsrc/media/skins/headerbar/go_default.jpg");
  overSkin: Embed(source="../../rsrc/media/skins/headerbar/go_over.jpg");
  downSkin: Embed(source="../../rsrc/media/skins/headerbar/go_down.jpg");
  disabledSkin: Embed(source="../../rsrc/media/skins/headerbar/go_disabled.jpg");
}

.closeButton {
  height: 13px;
  width: 13px;
  overSkin: Embed(source="../../pages/images/ui/client_close_over.png");
  disabledSkin: Embed(source="../../pages/images/ui/client_close_default.png");
  downSkin: Embed(source="../../pages/images/ui/client_close_down.png");
  upSkin: Embed(source="../../pages/images/ui/client_close_default.png");
  selectedOverSkin: Embed(source="../../pages/images/ui/client_close_over.png");
  selectedDisabledSkin: Embed(source="../../pages/images/ui/client_close_default.png");
  selectedDownSkin: Embed(source="../../pages/images/ui/client_close_down.png");
  selectedUpSkin: Embed(source="../../pages/images/ui/client_close_default.png");
}

.heightButton {
  height: 13px;
  width: 13px;
  overSkin: Embed(source="../../pages/images/ui/client_height_over.png");
  disabledSkin: Embed(source="../../pages/images/ui/client_height_default.png");
  downSkin: Embed(source="../../pages/images/ui/client_height_down.png");
  upSkin: Embed(source="../../pages/images/ui/client_height_default.png");
  selectedOverSkin: Embed(source="../../pages/images/ui/client_height_over.png");
  selectedDisabledSkin: Embed(source="../../pages/images/ui/client_height_default.png");
  selectedDownSkin: Embed(source="../../pages/images/ui/client_height_down.png");
  selectedUpSkin: Embed(source="../../pages/images/ui/client_height_default.png");
}

.locationName {
  fontSize: 12px;
  fontWeight: bold;
  color: white;
  textAlign: center;
}

.headerBox {
  paddingBottom: 2px;
  paddingLeft: 5px;
  verticalAlign: bottom;
  horizontalGap: 0px;
}

.headerLink {
  fontSize: 10px;
}

.editButton {
  paddingLeft: 0;
  paddingRight: 0;
  paddingTop: 0;
  paddingBottom: 0;
} 

.plusButton {
  icon: Embed(source="../../rsrc/media/skins/button/roomeditor/rollout_plus.png");
}

.minusButton {
  icon: Embed(source="../../rsrc/media/skins/button/roomeditor/rollout_minus.png");
}

.roomToolTip {
/** Crap, the fontSize=12 seems to fuck-up the background of the tooltip.
    Something to debug later.
  fontSize: 12;
  */
  backgroundColor: #000000;
}

.contentsBox, .descriptionBox, .titleBox, .infoBox {
  horizontalGap: 0;
  verticalGap: 0;
}

.descriptionBox {
  paddingBottom: 10px;
}

.titleBox {
  borderStyle: "solid";
  borderThickness: 1px;
  borderSides: "right";
  borderColor: #000000;
  verticalAlign: middle;
  paddingLeft: 4px;
  paddingRight: 4px;
}

.titleBox, .tabsFillerBox {
  backgroundColor: #000000;
}

.startBox {
  verticalAlign: bottom;
}

/** Lobby UI styles */

.lobbyLink {
  fontSize: 14px;
  verticalAlign: middle;
  color: white;
  textDecoration: underline;
}

.lobbyInfo {
  fontSize: 12;
  paddingLeft: 7;
  paddingRight: 7;
}

.lobbyLoadingBox {
  horizontalAlign: center;
  verticalAlign: middle;
  fontSize: 16;
  fontWeight: bold;
}

.lobbyTitle {
  fontSize: 18px;
  color: #A1D3EE;
}

/** Lobby splash panel */
.lobbySplashPanel {
  horizontalAlign: center;
  horizontalGap: 0;
  verticalGap: 20;
}

.lobbySplashButton {
  fontFamily: Helvetica;
  fontSize: 24px;
}

.lobbyMatchPanel {
}

.tablesTitle {
  backgroundImage: Embed(source="../../rsrc/media/skins/lobby/subtitle_bg.png",
                         scaleGridTop="8", scaleGridBottom="14", 
                         scaleGridLeft="10", scaleGridRight="41");
  backgroundSize: "100%";
  color: #FFFFFF;
  fontSize: 10;
  fontWeight: bold;
  horizontalAlign: center;
}

.tableHeader {
  paddingTop: 5px;
}

.tableMessage {
  fontWeight: "normal";
  paddingLeft: 10px;
  paddingTop: 10px;
  paddingRight: 10px;
  paddingBottom: 5px;
}

.tableList {
  backgroundAlpha: 0;
  borderStyle: none;
  alternatingItemColors: #FFCC99, #CCCCCC;
}

.pendingTableList, .runningTableList {
  verticalGap: 5;
}

.tableSummaryPanel {
  verticalAlign: middle;
}

.tablePanel {
  /*backgroundImage: Embed(source="../../rsrc/media/skins/lobby/pending_game_bg.png",
          scaleGridTop="10", scaleGridBottom="67",
          scaleGridLeft="10", scaleGridRight="67");
  backgroundSize: "100%";*/
}

.runningTablePanel {
  backgroundImage: Embed(source="../../rsrc/media/skins/lobby/running_game_bg.png",
          scaleGridTop="10", scaleGridBottom="67",
          scaleGridLeft="10", scaleGridRight="67");
  backgroundSize: "100%";
}

.tableCreationPanel {
  verticalAlign: middle;
  paddingTop: 5px;
  paddingLeft: 5px;
  paddingRight: 5px;
  paddingBottom: 5px;
  fontSize: 10px;
  fontWeight: bold;
}

/*.lobbyLabel {
  fontWeight: bold;
}*/

.lobbyTablePanel {
  verticalGap: 10;
}

.seatsGrid {
  backgroundColor: #233C50;
  backgroundAlpha: 1;
  paddingLeft: 5px;
  paddingRight: 5px;
  paddingTop: 10px;
  paddingBottom: 10px;
  horizontalGap: 5;
  verticalGap: 20;
  borderAlpha: 0;
  cornerRadius: 4;
}

.seatPanel {
  horizontalAlign: "center";
  verticalGap: 0;
  borderThickness: 0;
  borderStyle: "none";
}

/** Header styles */

.headerCloseBox {
  paddingLeft: 3px;
  paddingTop: 4px;
  paddingRight: 3px;
  paddingBottom: 3px;
  horizontalGap: 3px;
}

.embedButton {
  height: 13px;
  width: 13px;
  overSkin: Embed(source="../../rsrc/media/skins/button/embed_over.png");
  disabledSkin: Embed(source="../../rsrc/media/skins/button/embed.png");
  downSkin: Embed(source="../../rsrc/media/skins/button/embed_down.png");
  upSkin: Embed(source="../../rsrc/media/skins/button/embed.png");
  selectedOverSkin: Embed(source="../../rsrc/media/skins/button/embed_over.png");
  selectedDisabledSkin: Embed(source="../../rsrc/media/skins/button/embed.png");
  selectedDownSkin: Embed(source="../../rsrc/media/skins/button/embed_down.png");
  selectedUpSkin: Embed(source="../../rsrc/media/skins/button/embed.png");
}

.friendCheckBox {
  horizontalAlign: center;
  verticalGap: 0;
  borderStyle: none;
  borderThickness: 0;
}

.backToLobbyBtnBox {
  paddingTop: 7px;
  paddingRight: 5px;
  verticalAlign: top;
}

.backToLobbyBtn {
  overSkin: Embed(source="../../rsrc/media/skins/button/backtolobby_over.png");
  disabledSkin: Embed(source="../../rsrc/media/skins/button/backtolobby.png");
  downSkin: Embed(source="../../rsrc/media/skins/button/backtolobby_down.png");
  upSkin: Embed(source="../../rsrc/media/skins/button/backtolobby.png");
  selectedOverSkin: Embed(source="../../rsrc/media/skins/button/backtolobby_over.png");
  selectedDisabledSkin: Embed(source="../../rsrc/media/skins/button/backtolobby.png");
  selectedDownSkin: Embed(source="../../rsrc/media/skins/button/backtolobby_down.png");
  selectedUpSkin: Embed(source="../../rsrc/media/skins/button/backtolobby.png");
}

.chatContainer {
  borderThickness: 0;
  borderStyle: "solid";
  borderColor: #000000;
}

.topLevelLabel {
  color: white;
}

.gameChatContainer {
  backgroundColor: black;
  borderColor: #666666;
  borderSides: "right";
  borderStyle: solid;
  borderThickness: 1;
}

.playerList {
  backgroundAlpha: 0;
  borderStyle: none;
  selectionColor: #437393;
}

.gameListContainer {
  backgroundColor: black;
  borderStyle: none;
  horizontalGap: 0;
  verticalGap: 0;
}

.embedHeaderPlaceName {
  fontWeight: bold;
  fontSize: 12;
  color: white;
}

.embedHeaderSignupButton {
  upSkin: Embed(source="../../rsrc/media/skins/embedheader/signup_default.jpg");
  overSkin: Embed(source="../../rsrc/media/skins/embedheader/signup_over.jpg");
  downSkin: Embed(source="../../rsrc/media/skins/embedheader/signup_down.jpg");
}

.embedHeaderLogonButton {
  upSkin: Embed(source="../../rsrc/media/skins/embedheader/logon_default.jpg");
  overSkin: Embed(source="../../rsrc/media/skins/embedheader/logon_over.jpg");
  downSkin: Embed(source="../../rsrc/media/skins/embedheader/logon_down.jpg");
}

.embedHeaderAllgamesButton {
  upSkin: Embed(source="../../rsrc/media/skins/embedheader/allgames_default.jpg");
  overSkin: Embed(source="../../rsrc/media/skins/embedheader/allgames_over.jpg");
  downSkin: Embed(source="../../rsrc/media/skins/embedheader/allgames_down.jpg");
}

.noPlaceView {
  backgroundColor: black;
}

.panelToggle {
  icon: ClassReference(null);
  upIcon: ClassReference(null);
  overIcon: ClassReference(null);
  downIcon: ClassReference(null);
  disabledIcon: ClassReference(null);
  selectedUpIcon: ClassReference(null);
  selectedOverIcon: ClassReference(null);
  selectedDownIcon: ClassReference(null);
  selectedDisabledIcon: ClassReference(null);
  upSkin: Embed(source="../../rsrc/media/skins/checkbox/panel.png");
  overSkin: Embed(source="../../rsrc/media/skins/checkbox/panel_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/checkbox/panel.png"); /* TODO? */
  disabledSkin: Embed(source="../../rsrc/media/skins/checkbox/panel_disabled.png");
  selectedUpSkin: Embed(source="../../rsrc/media/skins/checkbox/panel_selected.png");
  selectedOverSkin: Embed(source="../../rsrc/media/skins/checkbox/panel_selected_over.png");
  selectedDownSkin: Embed(source="../../rsrc/media/skins/checkbox/panel_selected.png"); /* TODO? */
  selectedDisabledSkin: Embed(source="../../rsrc/media/skins/checkbox/panel_selected.png"); /* TODO? */
}

.notificationDisplay {
  horizontalGap: 0;
  verticalGap: 0;
  borderStyle: none;
  paddingTop: 3px;
  paddingRight: 4px;
}

.notificationCanvas {
  backgroundImage: Embed(source="../../rsrc/media/skins/controlbar/notif_display_background.png",
                         scaleGridTop="4", scaleGridBottom="15", 
                         scaleGridLeft="4", scaleGridRight="8");
  backgroundSize: "100%";
}

.notificationHistoryDisplay {
  backgroundColor: black;
  borderColor: #408fd9;
  borderStyle: "solid";
  borderThickness: 2;
  cornerRadius: 3;
  backgroundAlpha: 0.85;
  verticalGap: 0;
}

.notificationHistoryCell {
  backgroundAlpha: 0;
  borderSides: "top";
  borderColor: #999999;
  borderStyle: "solid";
  borderThickness: 1;
  paddingLeft: 3;
  paddingRight: 3;
  paddingTop: 3;
  paddingBottom: 3;
}

GameOverPanel {
  titleStyleName: "gameOverTitle";
  headerHeight: 32;
}

.gameOverTitle {
  fontSize: 24;
  color: #ffffff;
  textAlign: center;
}

.gameOverMessage {
  fontSize: 12;
  color: #519cdd;
}

.friendsListPanel {
  titleBackgroundSkin: Embed(source="../../rsrc/media/skins/friends_popup_header.png",
          scaleGridTop="8", scaleGridBottom="28",
          scaleGridLeft="8", scaleGridRight="211");
  headerHeight: 36;
  backgroundColor: black;
  backgroundAlpha: 0.85;
  backgroundImage: null;
  paddingTop: 0;
  paddingBottom: 0;
  paddingLeft: 0;
  paddingRight: 0;
  verticalGap: 0;
}

.partyPopup { /** TODO: probably: remove */
  titleBackgroundSkin: Embed(source="../../rsrc/media/skins/friends_popup_header.png",
          scaleGridTop="8", scaleGridBottom="28",
          scaleGridLeft="8", scaleGridRight="315");
  headerHeight: 36;
  backgroundColor: black;
  backgroundAlpha: 0.85;
  backgroundImage: null;
  paddingTop: 0;
  paddingBottom: 0;
  paddingLeft: 0;
  paddingRight: 0;
  verticalGap: 0;
}

/*
ShareDialog {
  titleBackgroundSkin: Embed(source="../../rsrc/media/skins/share_popup_header.png");
  headerHeight: 36;
}
*/

.copyButton {
  upSkin: Embed(source="../../rsrc/media/skins/button/copy.png");
  overSkin: Embed(source="../../rsrc/media/skins/button/copy_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/button/copy_down.png");
}

.sendButton {
  upSkin: Embed(source="../../rsrc/media/skins/button/send.png");
  overSkin: Embed(source="../../rsrc/media/skins/button/send_over.png");
  downSkin: Embed(source="../../rsrc/media/skins/button/send_down.png");
}

.friendList {
  borderColor: #408fd9;
  borderSides: "left right";
  borderStyle: "solid";
  borderThickness: 2;
  backgroundAlpha: 0;
}

.friendLabel {
  color: white;
  fontSize: 12;
}

.friendStatusLabel {
  color: #568EAF;
  fontSize: 10;
}

.friendsListEditorBox {
  backgroundColor: #185B81;
  backgroundAlpha: 0.5;
  borderStyle: "solid";
  borderColor: #408FD9;
  borderSides: "left bottom right";
  borderThickness: 2;
  verticalGap: 0;
  paddingLeft: 5;
  paddingRight: 5;
  paddingTop: 3;
  paddingBottom: 3;
}

.friendsListSeparator {
  backgroundColor: #2E7399;
  backgroundAlpha: 1;
  borderStyle: "solid";
  borderColor: #408FD9;
  borderSides: "left right";
  borderThickness: 2;
}

.sexyTextInput, .statusEdit, .statusEditHover {
  backgroundAlpha: 0;
  borderStyle: "none";
  color: #568EAF;
}

.statusEdit, .statusEditHover {
  fontSize: 10;
}

.sexyTextInput, .statusEdit {
  textDecoration: "none";
}

.statusEditHover {
  textDecoration: "underline";
}
