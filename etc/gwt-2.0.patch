Index: src/gwt/client/ui/PopupImplMozillaHack.java
===================================================================
--- src/gwt/client/ui/PopupImplMozillaHack.java	(revision 18853)
+++ src/gwt/client/ui/PopupImplMozillaHack.java	(working copy)
@@ -3,7 +3,7 @@
 
 package client.ui;
 
-import com.google.gwt.user.client.Element;
+import com.google.gwt.dom.client.Element;
 import com.google.gwt.user.client.ui.impl.PopupImpl;
 import com.google.gwt.user.client.ui.impl.PopupImplMozilla;
 
Index: .classpath
===================================================================
--- .classpath	(revision 18853)
+++ .classpath	(working copy)
@@ -53,7 +53,7 @@
 	<classpathentry kind="lib" path="extlibs/java/getdown.jar"/>
 	<classpathentry kind="lib" path="extlibs/java/google-collect.jar"/>
 	<classpathentry kind="lib" path="extlibs/java/guice.jar"/>
-	<classpathentry kind="lib" path="extlibs/java/gwt-user.jar"/>
+	<classpathentry kind="lib" path="extlibs/java/gwt-user-2.0.jar"/>
 	<classpathentry kind="lib" path="extlibs/java/hessian.jar"/>
 	<classpathentry kind="lib" path="extlibs/java/javassist.jar"/>
 	<classpathentry kind="lib" path="extlibs/java/jcip-annotations.jar"/>
Index: build.xml
===================================================================
--- build.xml	(revision 18853)
+++ build.xml	(working copy)
@@ -82,7 +82,7 @@
     <file name="${extlibs.dir}/getdown.jar"/>
     <file name="${extlibs.dir}/google-collect.jar"/>
     <file name="${extlibs.dir}/guice.jar"/>
-    <file name="${extlibs.dir}/gwt-user.jar"/>
+    <file name="${extlibs.dir}/gwt-user-2.0.jar"/>
     <file name="${extlibs.dir}/jaxb/jaxb-api.jar"/>
     <file name="${extlibs.dir}/jcip-annotations.jar"/>
     <file name="${extlibs.dir}/jetty6/jetty-util.jar"/>
@@ -362,47 +362,36 @@
     </else></if>
   </target>
 
-  <!-- runs the GWT debugging shell -->
-  <target name="gshell" depends="config">
-    <available property="gwtdir.present" file="lib/gwt"/>
-    <fail message="You must symlink 'lib/gwt' to a current GWT distribution."
-          unless="gwtdir.present"/>
-
-    <path id="gshell.classpath">
-      <fileset dir="lib/gwt" includes="*.jar"/>
-      <path refid="gwt.classpath"/>
-    </path>
-    <available property="gwt.present" classname="com.google.gwt.dev.GWTShell"
-               classpathref="gshell.classpath"/>
-    <fail message="You must symlink 'lib/gwt' to a current GWT distribution." unless="gwt.present"/>
+  <!-- runs the GWT dev mode -->
+  <target name="gdevmode" depends="gcompile" description="Run development mode">
     <fail message="You must specify -Dpage=(mail|stuff|shop|etc.)." unless="page"/>
 
-    <!-- we need to copy our .gwt.xml into place while gshell is running -->
+  	<!-- we need to copy our .gwt.xml into place while gshell is running -->
     <antcall target="preppage"><param name="page" value="${page}"/></antcall>
 
-    <if><equals arg1="${platform.darwin}" arg2="true"/><then>
-      <java classpathref="gshell.classpath" fork="true" maxmemory="256M"
-            classname="com.google.gwt.dev.GWTShell">
-        <jvmarg value="-XstartOnFirstThread"/>
-        <arg value="-noserver"/>
-        <arg value="-port"/>
-        <arg value="${http_port}"/>
-        <arg value="-out"/>
-        <arg value="${gwtout.dir}"/>
-        <arg value="gwt/0/${page}/${page}.html"/>
-      </java>
-    </then><else>
-      <java classpathref="gshell.classpath" fork="true" maxmemory="256M"
-            classname="com.google.gwt.dev.GWTShell">
-        <arg value="-noserver"/>
-        <arg value="-port"/>
-        <arg value="${http_port}"/>
-        <arg value="-out"/>
-        <arg value="${gwtout.dir}"/>
-        <arg value="gwt/0/${page}/"/>
-      </java>
-    </else></if>
+    <!-- default version -->
+    <property name="version" value="0"/>
 
+  	<!-- default path to the html file to load -->
+    <property name="path" value="gwt/${version}/${page}/index.html"/>
+
+    <java failonerror="true" fork="true" classname="com.google.gwt.dev.DevMode">
+      <classpath>
+        <path refid="gwt.classpath"/>
+        <pathelement path="${deploy.dir}/gclasses"/>
+        <fileset dir="${extlibs.dir}" includes="gwt-dev-2.0.jar"/>
+        <fileset dir="${extlibs.dir}" includes="gwt-user-2.0.jar"/>
+      </classpath>
+      <jvmarg value="-Xmx256M"/>
+      <arg value="-noserver"/>
+      <arg value="-startupUrl"/>
+      <arg value="${server_url}${path}"/>
+      <arg value="-war"/>
+      <arg value="pages/gwt/${version}"/>
+      <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
+      <arg value="${page}"/>
+    </java>
+
     <!-- now delete our temporary .gwt.xml file -->
     <delete file="${gsrc.dir}/${page}.gwt.xml"/>
   </target>
@@ -447,7 +436,7 @@
   </target>
 
   <!-- compiles our GWT sources with javac; handy for smoke testing -->
-  <target name="gcompile">
+  <target name="gcompile" depends="compile,gmsgs">
     <echo>Compiling GWT classes...</echo>
     <mkdir dir="${deploy.dir}/gclasses"/>
     <javac srcdir="${gsrc.dir}" destdir="${deploy.dir}/gclasses" includeAntRuntime="false"
@@ -462,7 +451,6 @@
       <compilerarg value="-Xlint"/>
       <compilerarg value="-Xlint:-serial"/>
     </javac>
-    <delete dir="${deploy.dir}/gclasses"/>
   </target>
 
   <!-- builds our numerous GWT web clients -->
@@ -496,8 +484,8 @@
     <java fork="true" maxmemory="1024M" failonerror="false" resultproperty="gwt.result"
     	classname="com.google.gwt.dev.Compiler">
       <classpath>
-        <fileset dir="${extlibs.dir}" includes="gwt-dev-*.jar"/> <!-- the GWT compiler -->
-        <fileset dir="${deploy.dir}/lib" includes="gwt-user.jar"/>
+        <fileset dir="${extlibs.dir}" includes="gwt-dev-2.0.jar"/> <!-- the GWT compiler -->
+        <fileset dir="${deploy.dir}/lib" includes="gwt-user-2.0.jar"/>
         <path refid="gwt.classpath"/>
       </classpath>
       <!-- temporary workaround to crashing problem on build server's BSD java -->
@@ -1119,6 +1107,7 @@
   <!-- cleans out the compiled GWT bits and caches -->
   <target name="gclean">
     <delete dir="${gwtout.dir}"/>
+    <delete dir="${deploy.dir}/gclasses"/>
   </target>
 
   <!-- cleans out things we don't want lingering after an automated build -->
