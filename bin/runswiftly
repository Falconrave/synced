#!/bin/sh
#
# $Id$
#
# Sets up standard bits and runs java

MSOY_HOME=`dirname $0`
MSOY_HOME=`cd $MSOY_HOME/.. ; pwd`

JAVA_VM="$JAVA_HOME/bin/java"
if [ ! -e $JAVA_VM ]; then
    echo "$0: Cannot find JVM in $JAVA_HOME. Exiting."
    exit 255
fi

# set up our java arguments
JAVA_ARGS=""

# extract -D arguments so that we can put them before the classname
while [ ! -z "$1" ]; do
    case "$1" in
        -debugger)
            JDWP_ARGS="transport=dt_socket,server=y,address=8000,suspend=n";
            JAVA_ARGS="-agentlib:jdwp=$JDWP_ARGS $JAVA_ARGS"
            ;;

        -jconsole)
            JAVA_ARGS="-Dcom.sun.management.jmxremote $JAVA_ARGS"
            ;;

        -D*)
            JAVA_ARGS="$JAVA_ARGS '$1'"
            ;;

        *)
            ARGS="$ARGS '$1'"
            ;;
    esac
    shift
done

# add all necessary JAR files and $GAME_HOME to the CLASSPATH
CLASSPATH="$JAVA_HOME/jre/lib/rt.jar"
for JAR in $MSOY_HOME/dist/lib/*.jar; do
    CLASSPATH=$CLASSPATH:$JAR
done
CLASSPATH=$MSOY_HOME/dist/classes:$CLASSPATH
export CLASSPATH

# grab some settings useful for swiftly
SERVER=`grep 'server_host' $MSOY_HOME/dist/server.properties | cut -f 2 -d="" | sed 's/^[ \t]*//;s/[ \t]*$//'`
# just take the first port
PORT=`grep 'server_ports' $MSOY_HOME/dist/server.properties | cut -f 2 -d="" | cut -f 1 -d "," | sed 's/^[ \t]*//;s/[ \t]*$//'`

# add in the found arguments
ARGS="$ARGS server=$SERVER port=$PORT"

# do the deed
eval $JAVA_VM $JAVA_ARGS com.threerings.msoy.swiftly.client.SwiftlyStandAlone $ARGS
