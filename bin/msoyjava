#!/bin/sh
#
# $Id$
#
# Sets up standard bits and runs java

MSOY_HOME=`dirname $0`
MSOY_HOME=`cd $MSOY_HOME/.. ; pwd`

umask 002

JAVA_VM="$JAVA_HOME/bin/java"
if [ ! -e $JAVA_VM ]; then
    echo "$0: Cannot find JVM in $JAVA_HOME. Exiting."
    exit 255
fi

# Obtain settings from MSOY_HOME/server.conf
if [ -f $MSOY_HOME/server.conf ]; then
    . $MSOY_HOME/server.conf
fi

# set up our java arguments
JAVA_ARGS="-Dno_unpack_resources=true \
    -Dresource_dir=$MSOY_HOME/rsrc \
    -Drsrc_cache_dir=/tmp"

# set up a custom SMTP host
if [ ! -z "$SMTP_HOST" ]; then
    JAVA_ARGS="$JAVA_ARGS -Dmail.smtp.host=$SMTP_HOST"
fi

# extract -D arguments so that we can put them before the classname
while [ ! -z "$1" ]; do
    case "$1" in
        -D*)
            JAVA_ARGS="$JAVA_ARGS $1"
            ;;

        -debugger)
            JDWP_ARGS="transport=dt_socket,server=y,address=8000,suspend=n";
            JAVA_ARGS="-agentlib:jdwp=$JDWP_ARGS $JAVA_ARGS"
            ;;

        -jconsole)
            JAVA_ARGS="-Dcom.sun.management.jmxremote $JAVA_ARGS"
            ;;

        *)
            ARGS="$ARGS $1"
            ;;
    esac
    shift
done

# Some temporary business for multiprocessor FreeBSD machines
NEEDS_MEMBAR=`$JAVA_VM -fullversion 2>&1 | grep diablo`
if [ ! -z "$NEEDS_MEMBAR" ]; then
     JAVA_ARGS="$JAVA_ARGS -XX:+UseMembar"
fi

# add all necessary JAR files and $MSOY_HOME/dist to the CLASSPATH
CLASSPATH="$JAVA_HOME/jre/lib/rt.jar"
for JAR in $MSOY_HOME/dist/lib/*.jar $MSOY_HOME/dist/msoy-*.jar; do
    if [ -e $JAR ]; then
        CLASSPATH=$JAR:$CLASSPATH
    fi
done
CLASSPATH=$MSOY_HOME/dist:$CLASSPATH
export CLASSPATH

# do the deed
exec $JAVA_VM $JAVA_ARGS $ARGS
