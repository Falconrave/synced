#!/bin/sh
#
# $Id$
#
# Runs a thane bureau client

NAME=msoy
DESC="MetaSOY thane client"

MSOY_HOME=`dirname $0 | sed s:/bin$::`
HOSTNAME=`hostname`

# Make sure our bureau id and port were properly supplied.
if [ -z "$1" -o -z "$2" -o -z "$3" -o -z "$4" ]; then
    echo "Usage: $0 bureauId connectToken server port"
    echo "Parameters: $@"
    exit 255
fi

BUREAU_ID=$1
CONNECT_TOKEN=$2
CONNECT_SERVER=$3
CONNECT_PORT=$4

LOGFILE=$MSOY_HOME/log/stdout-b$BUREAU_ID.log
LOG_EMAIL=nightly-logs@threerings.net

# Override settings with those from MSOY_HOME/dist/server.conf
if [ -f $MSOY_HOME/dist/server.conf ]; then
    . $MSOY_HOME/dist/server.conf
else
    echo "Can't load $MSOY_HOME/dist/server.conf; can't run bureau."
    exit 255
fi

if [ -z "$THANE_INTERPRETER" ]; then
    echo "Thane interpreter not set; can't run bureau."
    exit 255
fi

if [ ! -x "$THANE_INTERPRETER" ]; then
    THANE_INTERPRETER=$MSOY_HOME/$THANE_INTERPRETER
fi

if [ ! -x "$THANE_INTERPRETER" ]; then
    echo "Thane interpreter not found; can't run bureau."
    exit 255
fi

# gather all .abc files
LIBS=$MSOY_HOME/dist/msoylib.abc

# the 'main' abc file
MAIN=$MSOY_HOME/dist/MsoyThaneClient.abc

# Create the logfile
touch $LOGFILE

# Start up the server
{
echo "Running $DESC"
echo "------------------------------------------------------------------------------"
echo "      Bureau ID: $BUREAU_ID"
echo "    Interpreter: $THANE_INTERPRETER"
echo "Deployment root: $MSOY_HOME"
echo "          Token: $CONNECT_TOKEN"
echo "         Server: $CONNECT_SERVER"
echo "           Port: $CONNECT_PORT"
echo "           Libs: $LIBS"
echo "           Main: $MAIN"
echo "------------------------------------------------------------------------------";
} >>$LOGFILE

$THANE_INTERPRETER -Dinterp $LIBS $MAIN -- $BUREAU_ID $CONNECT_TOKEN \
    $CONNECT_SERVER $CONNECT_PORT >>$LOGFILE 2>&1
EXIT_CODE=$?

# Mail out warnings from the logs
FILTLOG=`mktemp /tmp/msoyfiltered-$BUREAU_ID.log.XXXXXX` || exit 1
cat $LOGFILE | $MSOY_HOME/tools/bin/lfilter > $FILTLOG
if [ -s $FILTLOG ]; then
    cat $FILTLOG | $MAIL -s "$HOSTNAME: $MSOY_HOME p$LISTEN_PORT filtered log" $LOG_EMAIL
fi
rm -f $FILTLOG

# Archive the server log
NOW=`date "+%F-%H:%M"`
mv $LOGFILE $LOGFILE.$NOW

# Prune old logs
find $MSOY_HOME/log -name 'stdout-b$BUREAU_ID.log*' -a -mtime +7 | xargs rm -f

exit $EXIT_CODE
