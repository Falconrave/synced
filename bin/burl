#!/bin/sh
#
# $Id$
#
# Startup script for the MetaSOY game server.

check_pid() {
    NAME=$1
    PIDFILE=$2
    PROCESS=$3
    if [ -f $PIDFILE ]; then
        PID=`cat $PIDFILE`
        RPIDS=`ps auxww | grep " $PID " | grep $PROCESS | awk '{ print $2 }' | \
            sort -n | head -1`
        if [ ! -z "$RPIDS" ]; then
            echo "WARNING: A $NAME process is currently running with pid $RPIDS."
            echo "WARNING: Run 'burl stop' to stop it."
            exit 255
        fi
    fi
}

WHOAMI=`whoami`
if [ "$WHOAMI" != "root" ]; then
    echo "This script must be run as root."
    exit 255
fi

MSOY_HOME=`dirname $0`/..
MSOY_HOME=`cd $MSOY_HOME ; pwd`
if [ ! -f $MSOY_HOME/dist/burl-server.conf ]; then
    echo "Unable to infer MSOY_HOME. No burl-server.conf file?"
    exit 1
fi

# Read in our configuration
. $MSOY_HOME/dist/burl-server.conf

# Use our hostname to compute an identifier for log files and such
PROCID=`hostname | sed 's:\..*::'`

# Let's blow that file descriptor limit wide open baby!
ulimit -n 65536

# Bump our maximum data segment size to 1.5 gigs
ulimit -d 1572864

# See how we were called
case "$1" in
  start)
        # Make sure burlrespawn is not currently running
        check_pid "respawn" $MSOY_HOME/run/burlrespawn-$PROCID.pid burlrespawn

        # Make sure there are no hung BureauLauncher processes
        check_pid "burlserver" $MSOY_HOME/run/burlserver-$PROCID.pid java

        # Go ahead and start things up
        DAEMON=$MSOY_HOME/bin/burlrespawn
        RESPAWN_PIDFILE=$MSOY_HOME/run/burlrespawn-$PROCID.pid
        SERVER_PIDFILE=$MSOY_HOME/run/burlserver-$PROCID.pid
        LOGFILE=$MSOY_HOME/log/burlrespawn-$PROCID.log
        echo -n "Starting $DAEMON: "
        touch $RESPAWN_PIDFILE $LOGFILE
        $DAEMON $PROCID $RESPAWN_PIDFILE $SERVER_PIDFILE >>$LOGFILE 2>&1 </dev/null &
        echo "started."
        ;;

  stop)
        RESPAWN_PIDFILE=$MSOY_HOME/run/burlrespawn-$PROCID.pid
        SERVER_PIDFILE=$MSOY_HOME/run/burlserver-$PROCID.pid
        if [ ! -f $RESPAWN_PIDFILE ]; then
            echo "No $RESPAWN_PIDFILE exists. Is burlrespawn running?"
        else
            echo "Shutting down burlrespawn."
            kill `cat $RESPAWN_PIDFILE`
            rm -f $RESPAWN_PIDFILE
        fi
        if [ ! -f $SERVER_PIDFILE ]; then
            echo "No $SERVER_PIDFILE exists. Is burl running?"
        else
            echo "Shutting down burl."
            kill `cat $SERVER_PIDFILE`
            rm -f $SERVER_PIDFILE
        fi
        ;;

  unspawn)
        RESPAWN_PIDFILE=$MSOY_HOME/run/burlrespawn-$PROCID.pid
        if [ ! -f $RESPAWN_PIDFILE ]; then
            echo "No $RESPAWN_PIDFILE exists. Is burlrespawn running?"
        else
            echo -n "Shutting down burlrespawn."
            kill `cat $RESPAWN_PIDFILE`
            rm -f $RESPAWN_PIDFILE
        fi
        ;;

  restart)
        SERVER_PIDFILE=$MSOY_HOME/run/burlserver-$PROCID.pid
        if [ ! -f $SERVER_PIDFILE ]; then
            echo "No $SERVER_PIDFILE exists. Is the server running?"
        else
            echo -n "Shutting down burl $PROCID."
            kill `cat $SERVER_PIDFILE`
            echo "Check $MSOY_HOME/log/burlrespawn-$PROCID.log to ensure that it restarts."
            rm -f $SERVER_PIDFILE
        fi
        ;;

  *)
        echo "Usage: $0 {start|stop|unspawn|restart}"
        exit 1
esac

exit 0
