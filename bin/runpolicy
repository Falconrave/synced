#!/bin/sh
#
# $Id$
#
# A script to invoke the Flash security policy server and email the generated
# logs when it eventually exits.

NAME=policy
DESC="Flash security policy server"

MSOY_HOME=`dirname $0 | sed s:/bin$::`
HOSTNAME=`hostname`

LOGFILE=$MSOY_HOME/log/stdout-policy.log
PIDFILE=$MSOY_HOME/run/policy-server.pid
LOG_EMAIL=nightly-logs@threerings.net

# Override settings with those from MSOY_HOME/dist/server.conf
if [ -f $MSOY_HOME/dist/server.conf ]; then
    . $MSOY_HOME/dist/server.conf
else
    echo "Can't load $MSOY_HOME/dist/server.conf; can't run server."
    exit 255
fi

CLASS=com.threerings.msoy.server.MsoyPolicyServer
JAVA_ARGS="-server"

# make sure we have a JVM and set up our classpath and bits
. $MSOY_HOME/bin/runcommon

# Create the logfile
touch $LOGFILE

# Start up the server
echo "Running policy server:" >>$LOGFILE
echo " Deployment root: $MSOY_HOME" >>$LOGFILE
echo "         Java VM: $JAVA_VM" >>$LOGFILE
echo "       Java args: $JAVA_ARGS" >>$LOGFILE
echo "    Server class: $CLASS" >>$LOGFILE

$JAVA_VM $JAVA_ARGS $CLASS >>$LOGFILE 2>&1 &
PROCESS_PID=$!
echo $PROCESS_PID >$PIDFILE
wait $PROCESS_PID
EXIT_CODE=$?

# Mail out warnings from the logs
FILTLOG=`mktemp /tmp/msoyfiltered.log.XXXXXX` || exit 1
cat $LOGFILE | $MSOY_HOME/tools/bin/lfilter > $FILTLOG
if [ -s $FILTLOG ]; then
    cat $FILTLOG | $MAIL -s "$HOSTNAME: $MSOY_HOME filtered policy log" $LOG_EMAIL
fi
rm -f $FILTLOG

# Archive the log
NOW=`date "+%F-%H:%M"`
mv $LOGFILE $LOGFILE.$NOW

# Prune old logs
find $MSOY_HOME/log -name 'stdout-policy.log*' -a -mtime +7 | xargs rm -f

exit $EXIT_CODE
