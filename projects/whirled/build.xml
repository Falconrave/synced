<?xml version="1.0" standalone="yes"?>
<!-- build configuration -->
<project name="whirled" default="compile" basedir=".">

  <!-- configuration properties -->
  <property name="app.name"     value="whirled"/>
  <property name="deploy.dir"   value="dist"/>
  <property name="flex.path"    value="../../tools/extern/flex_sdk"/>
  <property name="projects.dir" value=".."/>
  <property name="asrc.dir"     value="src/as"/>

  <!-- import some targets to enumerate library dependencies -->
  <property name="libs.dir" value="../../${deploy.dir}/lib"/>
  <import file="etc/libs-incl.xml"/>

  <!-- declare our classpath -->
  <path id="classpath">
    <pathelement location="${deploy.dir}/classes"/>
    <fileset dir="${deploy.dir}/lib" includes="**/*.jar"/>
  </path>

  <!-- prepares the application directories -->
  <target name="prepare">
    <mkdir dir="${deploy.dir}"/>
    <mkdir dir="${deploy.dir}/classes"/>
    <copy todir="${deploy.dir}/classes">
      <fileset dir="src/java" includes="**/*.properties"/>
    </copy>
    <mkdir dir="${deploy.dir}/classes/rsrc"/>
    <copy todir="${deploy.dir}/classes/rsrc">
      <fileset dir="rsrc" includes="**/*"/>
    </copy>
    <mkdir dir="${deploy.dir}/lib"/>
    <copy todir="${deploy.dir}/lib" flatten="true">
      <fileset refid="${app.name}.libs"/>
    </copy>
  </target>

  <!-- cleans out the intermediate build files -->
  <target name="clean">
    <delete dir="${deploy.dir}/classes"/>
    <delete failonerror="false"><fileset dir="${deploy.dir}" includes="*.jar"/></delete>
  </target>

  <!-- wipes the entire build directory clean -->
  <target name="distclean" depends="clean">
    <delete dir="${deploy.dir}"/>
  </target>

  <!-- build the java class files -->
  <target name="compile" depends="prepare">
    <javac srcdir="src/java" destdir="${deploy.dir}/classes" includeAntRuntime="false"
           debug="on" optimize="${build.optimize}" deprecation="on" source="1.5" target="1.5">
      <classpath refid="classpath"/>
      <compilerarg value="-Xlint"/>
      <compilerarg value="-Xlint:-serial"/>
    </javac>
  </target>

  <!-- ensures the Flex SDK path is set and baked into the right config files -->
  <target name="prepare-flex">
    <!-- generate the whirled-config.xml file using the flex.path -->
    <copy tofile="etc/whirled-config.xml" file="etc/whirled-config.xml.in" overwrite="true">
      <filterset>
        <filter token="lib_path" value="../../lib"/>
        <filter token="flex_path" value="${flex.path}"/>
      </filterset>
    </copy>
  </target>

  <!-- determines whether or not our whirled.swc Flash library is up to date -->
  <target name="checkaslib">
    <uptodate property="aslib_is_up_to_date" targetfile="${deploy.dir}/whirled.swc">
      <srcfiles dir="${projects.dir}/vilya/src/as/com/threerings/ezgame" includes="**/*.as"/>
      <srcfiles dir="${asrc.dir}/com/whirled" includes="**/*.as"/>
    </uptodate>
  </target>

  <!-- builds our whirled.swc Flash library -->
  <target name="aslib" unless="aslib_is_up_to_date" depends="prepare-flex,checkaslib">
    <!-- build the version for clients to build against -->
    <java jar="${flex.path}/lib/compc.jar" fork="true" failonerror="true">
      <arg value="-load-config"/>
      <arg value="etc/whirled-config.xml"/>
      <arg value="-external-library-path"/>
      <arg value="${flex.path}/frameworks/libs"/>
      <arg value="-compiler.optimize"/>
      <arg value="-compiler.source-path=${projects.dir}/narya/src/as/"/>
      <arg value="-compiler.source-path=${projects.dir}/nenya/src/as/"/>
      <arg value="-compiler.source-path=${projects.dir}/vilya/src/as/"/>
      <arg value="-compiler.source-path=${asrc.dir}/"/>
      <arg value="-include-sources=${projects.dir}/narya/src/as/"/>
      <arg value="-include-sources=${projects.dir}/nenya/src/as/com/threerings/flash/"/>
      <arg value="-include-sources=${projects.dir}/vilya/src/as/com/threerings/parlor/"/>
      <arg value="-include-sources=${projects.dir}/vilya/src/as/com/threerings/ezgame/"/>
      <arg value="-include-sources=${asrc.dir}/com/whirled/"/>
      <arg value="-output"/>
      <arg value="${deploy.dir}/whirled.swc"/>
    </java>
  </target>

  <!-- the default target is to rebuild everything -->
  <target name="all" depends="clean,prepare,compile"/>

  <!-- builds our jar file -->
  <target name="dist" depends="prepare,compile,aslib">
    <jar destfile="${deploy.dir}/${app.name}.jar" basedir="${deploy.dir}/classes"/>
  </target>
</project>
