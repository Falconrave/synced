<?xml version="1.0" standalone="yes"?>
<!-- build configuration -->
<project name="remixer" default="compile" basedir=".">

  <!-- configuration parameters -->
  <property name="app.name"     value="remixer"/>
  <property name="deploy.dir"   value="dist"/>
  <property name="classes.dir"  value="${deploy.dir}/classes"/>
  <property name="libs.dir"     value="../../${deploy.dir}/lib"/>
  <import file="etc/libs-incl.xml"/>

  <!-- declare our classpath business -->
  <path id="classpath">
    <pathelement location="${classes.dir}"/>
    <fileset dir="${deploy.dir}/lib" includes="**/*.jar"/>
  </path>

  <!-- prepares the application directories -->
  <target name="prepare">
    <mkdir dir="${deploy.dir}"/>
    <mkdir dir="${deploy.dir}/lib"/>
    <mkdir dir="${classes.dir}"/>
    <copy todir="${classes.dir}">
      <fileset dir="src/java" includes="**/*.properties"/>
      <fileset dir="src/java" includes="**/*.tmpl"/>
    </copy>
    <copy todir="${deploy.dir}/lib" flatten="true">
      <fileset refid="${app.name}.libs"/>
      <fileset dir="../../lib" includes="plugin.jar"/>
    </copy>
  </target>

  <!-- cleans out the intermediate build files -->
  <target name="clean">
    <delete dir="${deploy.dir}/classes"/>
    <delete failonerror="false"><fileset dir="${deploy.dir}" includes="*.jar"/></delete>
  </target>

  <!-- wipes the entire build directory clean -->
  <target name="distclean">
    <delete dir="${deploy.dir}"/>
  </target>

  <!-- build the java class files -->
  <target name="compile" depends="prepare">
    <javac srcdir="src/java" destdir="${classes.dir}" includeAntRuntime="false"
           debug="on" optimize="{$build.optimize}" deprecation="on" source="1.5" target="1.5">
      <classpath refid="classpath"/>
      <compilerarg value="-Xlint"/>
      <compilerarg value="-Xlint:-serial"/>
    </javac>
  </target>

  <!-- builds our distribution jar file -->
  <target name="dist" depends="prepare,compile">
    <jar destfile="${deploy.dir}/remixer.jar">
      <fileset dir="${classes.dir}" includes="com/threerings/msoy/**"/>
    </jar>
  </target>

  <!-- optimizes, combines and removes dead code -->
  <target name="proguard" depends="dist">
    <!-- first run proguard on the code to include everything we need and nothing more -->
    <taskdef resource="proguard/ant/task.properties" classpath="${deploy.dir}/lib/proguard.jar"/>
    <proguard>
      -injars dist/lib/samskivert-0.0-SNAPSHOT.jar(**/xml/**,**/util/**,**/swing/**)
      -injars dist/lib/commons-codec.jar(**/*.class)
      -injars dist/lib/commons-collections.jar(**/*.class)
      -injars dist/lib/commons-io.jar(**/*.class)
      -injars dist/lib/commons-digester.jar(**/*.class)
      -injars dist/lib/commons-logging.jar(**/*.class)
      -injars dist/lib/servlet-api.jar(**/*.class)
      -injars dist/lib/whirled-code.jar(com/whirled/DataPack*.class,
                                        com/whirled/remix/data/EditableDataPack*.class)
      -injars dist/remixer.jar(!META-INF/*)
      -libraryjars ${java.home}/lib/rt.jar
      -dontskipnonpubliclibraryclasses

      -outjars dist/remixer-pro.jar
      -printseeds dist/proguard.seeds
      -printmapping dist/proguard.map

      -keep class * extends java.applet.Applet
    </proguard>

    <!-- then run retroweaver to make the code 1.4 compatible -->
    <taskdef name="weave" classname="com.rc.retroweaver.ant.RetroWeaverTask"
             classpath="${deploy.dir}/lib/retroweaver-all-1.2.2.jar"/>
    <weave inputjar="${basedir}/${deploy.dir}/${app.name}-pro.jar"
           outputjar="${basedir}/${deploy.dir}/${app.name}-retro-pro.jar"/>

    <!-- finally combine the retroweaved jar file with the retroweaver runtime -->
    <unjar src="${deploy.dir}/${app.name}-retro-pro.jar" dest="${deploy.dir}/rptmp"/>
    <unjar src="${deploy.dir}/lib/retroweaver-rt-1.2.2.jar" dest="${deploy.dir}/rptmp"/>
    <jar destfile="${deploy.dir}/${app.name}-retro-pro.jar" basedir="${deploy.dir}/rptmp"/>
    <delete dir="${deploy.dir}/rptmp"/>
  </target>

  <!-- runs the media chooser test application -->
  <target name="test" depends="dist">
  <!--
    <java classname="com.threerings.msoy.remixer.MediaChooser" fork="true">
      <classpath refid="classpath"/>
    </java>
    -->
  </target>

</project>
